

修改端口：
	<Server port="8005" shutdown="SHUTDOWN">...</Server> //关闭端口
	<Connector port="8080" protocol="HTTP/1.1" ... /> //HTTP端口
	<Connector port="8009" protocol="AJP/1.3" redirectPort="8443" /> //AJP端口


查询tomcat的启动日志：
	$> cd tomcat/logs/
	$> tail -f catalina.out #查看日志信息
	$> ps -ef | grep 8080 #查看端口

访问日志：
	ps -ef |grep tomcat #查看tomcat进程
	tail -f catalina.out #查看启动日志
	在log目录下命令如下 tail -1000f wj-bc-sysu-api-service.log


嵌入式Tomcat使用：
	。。。。
	在嵌入式Tomcat启动类中，为了防止服务器中途退出，可以添加一个常驻线程？？


Tomcat热部署：
	概念：不重新启动tomcat的情况下，将项目部署到我们的服务器中
	方式一：直接把war包放在tomcat的webapps目录下
	方式二：找到tomcat的conf/server.xml文件，在Host标签中添加Context标签:
		如：<Host><Context debug="0" docBase="D:\workspaces\Demo" path="/demo1" reloadable="true" /></Host>
		访问：http://localhost:8080/demo1
	方式三：在tomcat\conf\Catalina\localhost目录中新建demo2.xml文件。
		demo2.xml内容如下：
		<?xml version="1.0" encoding="UTF-8" ?>
		<Context docBase="D:\workspaces\Demo" reloadable="true" />
		访问：http://localhost:8080/demo2 #将文件名作为访问名称


配置数据源：

Tomcat源码：
	https://github.com/apache/tomcat
	https://github.com/heroku/devcenter-embedded-tomcat --嵌入式tomcat
	源码入口：在Acceptor的run方法里：socket = endpoint.serverSocketAccept(); 来接收一个新的连接

Tomcat实现web管理：
	管理界面功能简述
	使用tomcat管理界面发布项目


单点登陆：
	概念
	应用场景
	如何配置Tomcat单点登录(使用cas)


多域名访问：
	基于ip配置虚拟主机：在server.xml中添加Host标签
	基于端口配置：在server.xml中添加Service标签

关闭端口号：
	防止别人通过telnet来关闭我们的tomcat服务器 ！！
	> telnet 127.0.0.1 8006
	> SHUTDOWN #这时候会将tomcat服务器关闭
	解决：将<Server port="8005" shutdown="SHUTDOWN">中的shutdown值修改为随意值

初始化Tomcat配置：
	关闭服务器端口
	隐藏版本信息
	禁用Tomcat管理页面
	自定义错误页面
	注释AJP协议：
	启用cookie的HttpOnly

Tomcat优化配置：
	缓存优化：mginx、gzip
	运行模式：BIO、NIO、APR



windows10下安装VMware虚拟机并搭建CentOS系统环境：
	https://www.cnblogs.com/xingxia/p/vmware_windows.html
使用VMware在本地搭建多个CentOS虚拟机：
	https://blog.csdn.net/yangshangwei/article/details/82766404


CentOS用户无法开启系统权限：
	问题描述：XXX is not in the sudoers file. This incident will be reported
	详细：https://blog.csdn.net/jeremyjone/article/details/81355568
	步骤：
		1.切换为root用户：$ su
		2.添加文件的写权限：$ chmod u+w /etc/sudoers
		3.编辑sudoers文件：$ vim /etc/sudoers 
			#找到“root ALL=(ALL)	ALL”这一行，在下一行添加“test ALL=(ALL) ALL”内容


开启CentOS7之旅：
开放20和22端口：
	CentOS7没有开放任何端口，所以不能在window上访问，也不能通过xshell连接
	Xshell通过sll连接，端口是20或22
	CentOS7放弃了iptables防火墙而启用firewall防火墙。
	firewall-cmd –zone=public –add-port=20/tcp –permanent #开放20端口
	firewall-cmd –zone=public –add-port=22/tcp –permanent #开放22端口

安装vim编辑器：
	$ yum install vim

安装wget下载：
	$ yum install wget

切换到下载文件目录：
	$ cd /usr/local/src


添加用户:
	useradd -d /usr/testUser -m testUser 	--添加用户testUser，产生一个主目录/usr/testUser
	useradd testUser	--添加用户
	passwd testUser		--修改密码
	su testUser 		--切换用户
用户组：
	groupadd testGroup	--添加组



Linux安装JDK：
1.卸载Linux自带的JDK：
> rpm -qa|grep java //查看jdk的信息
	一般将获得如下信息:
	java-1.4.2-gcj-compat-1.4.2.0-40jpp.115
	java-1.6.0-openjdk-1.6.0.0-1.7.b09.el5
> yum -y remove java java-1.4.2-gcj-compat-1.4.2.0-40jpp.115  //卸载jdk

2.从网上下载jdk
	wget https://download.oracle.com/otn-pub/java/jdk/8u201-b09-demos/42970487e3af4f5aa5bca3f542482c60/jdk-8u201-linux-x64-demos.tar.gz

3.解压
	tar -zxvf jdk-8u171-linux-x64.tar.gz

4.设置环境变量
>	vim /etc/profile
在文件末尾追加：
JAVA_HOME=/opt/java/jdk1.8.0_171
JRE_HOME=$JAVA_HOME/jre
PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin
CLASSPATH=:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib/dt.jar
export JAVA_HOME JRE_HOME PATH CLASSPATH

5.最后启用新的配置
	source /etc/profile

6.检查新安装的jdk
	java -version

安装tomcat：
命令行下载：
	wget http://mirrors.shu.edu.cn/apache/tomcat/tomcat-8/v8.0.52/bin/apache-tomcat-8.0.52.tar.gz

1.解压：
	tar -zxvf apache-tomcat-8.0.52.tar.gz
2.移动：
	sudo mv apache-tomcat-8.0.52/ /usr/local/apache-tomcat-8.0.52
3.启动tomcat：
	cd apache-tomcat-8.0.52/bin
	sh startup.sh或者./startup.sh
4.查看tomcat进程是否启动：
	ps aux | grep tomcat
5.关闭tomcat：
	sh shutdown.sh


防火墙端口：
1、查看所有已开放的端口
	sudo firewall-cmd --zone=public --list-ports
2、添加（--permanent永久生效，没有此参数重启后失效）
	sudo firewall-cmd --zone=public --add-port=8080/tcp --permanent
3、重新载入(更新防火墙规则)
	sudo firewall-cmd --reload


Liunx常用命令
查看安装目录：
	whereis nginx	#查看nginx的安装目录

查看文件所在目录：
	find / | grep nginx.conf #查找根目录/及其子目录下名为nginx.conf的文件

查看进程：
	ps -ef | grep nginx #查看nginx进程
	kill -quit 进程号 #关闭nginx服务器

解压包：
	tar -zxvf nginx.tar.gz


安装程序：
	wget ...
	tar -zxvf *.tar.gz
	cd *
	make && make install


ps -ef|grep tomcat
	-Dcatalina.base=/opt/jira7.3.4/atlassian-jira-software-7.3.4-standalone //对应启动目录


查看当前目录： pwd

tail -f /opt/spring-boot-deploy/wj-bc-sysu-api/logs/wj-bc-sysu-api-gateway.log