show databases; --查看所有数据库
show databases like xx; --模糊查看数据库
use databaseName; --使用databaseName数据库
select now(), user(), version(); --显示当前时间、用户名、数据库版本
show tables; --查看所有表
show tables like xx; --模糊查看所有表
desc 表名; --查看表
SHOW CREATE TABLE 表名; --查看表
SHOW CLOBAL STATUS LIKE 'INNODB_PAGE_SIZE'; --MySQL查询页大小

内置函数：
	--1、数值函数
	greatest(value1, value2)	--返回提供的最大值
	least(value1, value2)	--返回提供的最小值
	abs(x)	--绝对值 abs(-10.9) = 10
	format(x, d) --格式化千分位数值 format(1234567.456, 2) = 1,234,567.46
	ceil(x) --向上取整 ceil(10.1) = 11
	floor(x) --向下取整 floor (10.1) = 10
	round(x) --四舍五入去整
	mod(m, n) --求余，10%3=1
	pow(m, n) --m^n
	sqrt(x) --算术平方根
	rand() --随机数
	truncate(x, d) --截取d位小数
	
	--2、时间日期函数
	now(), current_timestamp(); --当前日期时间
	current_date(); --当前日期
	current_time(); --当前时间
	date('yyyy-mm-dd hh:ii:ss'); --获取日期部分，如date('2020-02-03 12:23:45')结果为2020-02-03
	time('yyyy-mm-dd hh:ii:ss'); --获取时间部分
	date_format('yyyy-mm-dd hh:ii:ss', '%d %y %a %d %m %b %j'); --格式化时间
	unix_timestamp(); --获得unix时间戳
	
	--3、字符串函数
	length(string)          --string长度，字节
	char_length(string)     --string的字符个数
	substring(str, position [,length])      --从str的position开始，取length个字符
	replace(str ,search_str ,replace_str)   --在str中用replace_str替换search_str
	instr(string ,substring)    --返回substring首次在string中出现的位置
	concat(string [,...])   --连接字串
	charset(str)            --返回字串字符集
	lcase(string)           --转换成小写
	left(string, length)    --从string2中的左边起取length个字符
	load_file(file_name)    --从文件读取内容
	locate(substring, string [,start_position]) --同instr，但可指定开始位置
	lpad(string, length, pad)   --重复用pad加在string开头,直到字串长度为length
	ltrim(string)           --去除前端空格
	repeat(string, count)   --重复count次
	rpad(string, length, pad)   --在str后用pad补充,直到长度为length
	rtrim(string)           --去除后端空格
	strcmp(string1 ,string2)    --逐字符比较两字串大小
	
	--4、条件函数
	--case用法
	case
		when condition1 then result1
		when condition2 then result2
		...
		else defaultResult
	end
	--if用法
	语法：if(condition, true_value, false_value)
	若condition为真，返回true_value，否则计算并返回false_value


	--5、聚合函数
	count()
	sum();
	max();
	min();
	avg();
	group_concat([DISTINCT] 要连接的字段 [Order BY ASC/DESC 排序字段] [Separator '分隔符']) --聚合函数


select选择索引：
	--use/ignore/force index
	select * from table1 use index(key1,key2) where key1=1 and key2=2 and key3=3;
	select * from table1 ignore index (key3) where key1=1 and key2=2 and key3=3;

子查询：
	--行子查询
	select * from t1 where (id, gender) in (select id, gender  from t2);
	行构造符:(col1, col2, ...) 或 ROW(col1, col2, ...)
	行构造符通常用于能对返回两个或两个以上列的子查询进行比较。
	--特殊符号
	!= all() 相当于not in
	= some() 相当于in
	!= some() 不等同于 not in，不等于其中某一个。



MySQL的@用法:
	# 可当作rownum
	select (@i:=@i+1) rownum, t.* from student t, (select @i:=0) j;
MySQL应用之实现Oracle rank()排序：
	--使用@语法
	https://blog.csdn.net/u014427391/article/details/100898845


级联删除/更新关联表：
	alter table `t_user_detail` add constraint `fk_user_id` foreign key (`user_id`) references `t_user` (`id`) on delete cascade on update cascade;

数据库崩溃时事务的恢复机制？
	REDO日志和UNDO日志

varchar和char的使用场景？
	vharchar变长，char定长。

查询语句不同元素（where、join、limit、group by、having等等）执行先后顺序？
sql查询语句确定创建哪种类型的索引？如何优化查询？
数据库的大表查询优化？
MySQL慢查询解决？explain优化？
AUTO_INCREMENT原理（考察并发情况）?
MVCC机制有什么问题？怎么解决？
临时表？临时表的数据什么时候删除？
非关系型数据库和关系型数据库区别，优势比较？
数据库三范式，根据某个场景设计数据表？范式和反范式的区别以及彼此的优缺点？
什么是内连接、外连接、交叉连接、笛卡尔积等？
数据库的读写分离、主从复制，主从复制分析的7个问题？
MySQL慢查询怎么解决？如何使用explain优化sql查询和索引？
数据库崩溃时事务的恢复机制（REDO日志和UNDO日志）？
你们后端用什么数据库做持久化的？有没有用到分库分表，怎么做的？
数据库分页查询，如何分页，怎么实现？
MySQL常见的三种存储引擎（InnoDB、MyISAM、MEMORY）的区别？
sql查询语句确定创建哪种类型的索引？如何优化查询？聚集索引和非聚集索引区别？
索引的常见实现方式有哪些，有哪些区别?MySQL的存储引擎有哪些，有哪些区别？InnoDB使用的是什么方式实现索引，怎么实现的？说下聚簇索引和非聚簇索引的区别？什么是覆盖索引？
MySQL索引类别？为什么要用B+树？B+树和B-树的区别？B+Tree索引和Hash索引的区别？为什么选用自增量作为主键索引？介绍B树、B+树、红黑树？
组合索引和单个索引有什么区别？
MySQL事务的4大特性、4种隔离级别及解决的问题，MySQL默认是哪个级别？
	特性(ACID)：原子性、一致性、隔离性、持久性
	事务级别：串行化、读已提交(默认)、可重复读、读未提交
	mysql如何在RR隔离级别下避免幻读问题：间隙锁
	四种隔离级别，虚读和幻读什么意思发生在哪？
MySQL锁，行锁，表锁 ，什么时候发生锁，怎么锁，原理
数据库优化，最左原则啊，水平分表，垂直分表
MySQL都有什么锁，死锁判定原理和具体场景，死锁怎么解决？select时怎么加排它锁？