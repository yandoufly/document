你能解释一下里氏替换原则吗？
	任何基类可以出现的地方，子类一定可以出现

你在编码时最常用的设计模式有哪些？在什么场景下用？

一、创建型模式
单例模式
工厂模式
创建者模式

二、结构型模式：
适配器模式：
	Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以在一起工作。
	1.SpringMVC中的HandlerAdapter

代理模式：
	AOP代理主要分为静态代理和动态代理。静态代理的代表为AspectJ；动态代理则以Spring AOP为代表。
	Spring AOP中的动态代理主要有两种方式，JDK动态代理和CGLIB动态代理。
	1.记录log日志等操作

装饰器模式
	不想使用继承来扩展功能，通过添加该属性进行引入。


三、行为型模式：
策略模式：
	代替if-else使用
	1.重大队列有几种传染病类型的csv文件导入，都是使用同一个controller的，然后不是采用if-else区分是哪种类型，这个通过每个类型有一个对应模板，每个模板配置对应的支持类型。这样不同的csv文件就能够使用与之支持的模板进行处理。

责任链模式：
	1.spring security 的 filter。框架里面有一个ProviderManager类，里面存放了所有的filter，会遍历所有filter找到对应支持的token对象。
	2.我们的完整校验，会包括通用校验、特殊校验和远程校验

观察者模式：也称为发布/订阅模式