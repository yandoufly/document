
Linux相关工具：
	SecureCRT
	Xshell
	WinSCP


windows10下安装VMware虚拟机并搭建CentOS系统环境：
	https://www.cnblogs.com/xingxia/p/vmware_windows.html
使用VMware在本地搭建多个CentOS虚拟机：
	https://blog.csdn.net/yangshangwei/article/details/82766404

CentOS7安装：
	开放20和22端口：
		Xshell通过sll连接，端口是20或22。CentOS7没有开放任何端口，所以不能在window上访问，也不能通过xshell连接。
		CentOS7放弃了iptables防火墙而启用firewall防火墙。
		firewall-cmd –zone=public –add-port=20/tcp –permanent #开放20端口
		firewall-cmd –zone=public –add-port=22/tcp –permanent #开放22端口
	防火墙端口：
		1、查看所有已开放的端口
			sudo firewall-cmd --zone=public --list-ports
		2、添加（--permanent永久生效，没有此参数重启后失效）
			sudo firewall-cmd --zone=public --add-port=8080/tcp --permanent
		3、重新载入(更新防火墙规则)
			sudo firewall-cmd --reload
	查看防火墙开放的端口：
		> more /etc/sysconfig/iptables
	查看端口是否被占用
		> netstat -anp | grep 端口号
		> netstat -nultp (此处不用加端口号)
		--说明：
		listen表示已被占用，最后一行显示被服务xx占用
		查看具体端口时候，必须要看到tcp，端口号，LISTEN那一行，才表示端口被占用

	> yum install vim  	#安装vim编辑器
	> yum install wget 	#安装wget下载
	> cd /usr/local/src	#切换到下载文件目录

	添加用户:
		> useradd -d /usr/testUser -m testUser 	--添加用户testUser，产生一个主目录/usr/testUser
		> useradd testUser	--添加用户
		> passwd testUser		--修改密码
		> su testUser 		--切换用户
	用户组：
		> groupadd testGroup	--添加组

	CentOS用户无法开启系统权限：
		问题描述：XXX is not in the sudoers file. This incident will be reported
		详细：https://blog.csdn.net/jeremyjone/article/details/81355568
		步骤：
			1、切换为root用户：$ su
			2、添加文件的写权限：$ chmod u+w /etc/sudoers
			3、编辑sudoers文件：$ vim /etc/sudoers 
			#找到“root ALL=(ALL)	ALL”这一行，在下一行添加“test ALL=(ALL) ALL”内容

vim编辑文件：
	vim fileName #进入vi命令
	:set nu #显示所有行号
	i 	#进入编辑模式
	esc	#退出编辑模式
	:q 	#不保存退出vim
	:q!	#强制不保存退出vim
	:wq	#保存退出vim


Linux根据关键字查询日志：
	1.单文件：vi或vim编辑器打开文件。在查看模式下，“/关键字”向下查找，“?关键字”向上查找
	2.多文件：grep ERROR /var/log/messages* #匹配到ERROR这个关键字的行和所在的日志文件直接输出到屏幕
	3.cat命令查看。如cat xx.log | grep key 等价于 grep key xx.log
tail查询日志
	tail -1000f xx.log	#实时刷新最新的1000行日志
	tail -1000f xx.log | grep [关键字] #查找最新1000行中与关键字匹配的行
	tail -100f xxx.log | grep '2019-10-29 16:4[0-9]' #查找最新的100行中时间范围在2019-10-29 16:40-2019-10-29 16:49范围中的行
	tail -1000f xxx.log | grep -A 5 [关键字] #查看最新的1000行中与关键字匹配的行加上匹配行后的5行


find查找文件
	> find . -type f -size +100M 	--查找大小超过5M的文件
	> find /etc -name tnsnames.ora		--查找etc目录的tnsnames.ora文件
	> find / | grep nginx.conf #查找根目录/及其子目录下名为nginx.conf的文件

其它命令：
	> top 	--查看资源占用率
	> free 	--查看总内存、使用、空闲情况
	> pwd	--查看当前目录
	> tar -zxvf nginx.tar.gz	--解压包

问：怎么查看进程和杀死进程？
	> ps -ef | grep java --查看Java进程
	> kill -9 [pid] #进程号 --杀死进程，“-9”强迫进程立即停止

问：打印一个文件夹的所有文件？
	ll ls


安装JDK：
1.卸载Linux自带的JDK：
	> java -version	//查看系统现有的jdk
	> rpm -qa|grep java //查看jdk的信息
	> yum remove *openjdk* //卸载jdk
2.从网上下载jdk
	wget https://download.oracle.com/otn-pub/java/jdk/8u201-b09-demos/42970487e3af4f5aa5bca3f542482c60/jdk-8u201-linux-x64-demos.tar.gz
3.解压
	tar -zxvf jdk-8u171-linux-x64.tar.gz
4.设置环境变量
	> vim /etc/profile
	在文件末尾追加：
	JAVA_HOME=/opt/java/jdk1.8.0_171
	JRE_HOME=$JAVA_HOME/jre
	PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin
	CLASSPATH=:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib/dt.jar
	export JAVA_HOME JRE_HOME PATH CLASSPATH
5.最后启用新的配置
	source /etc/profile
6.检查新安装的jdk
	java -version
7.jdk自带命令查看GC情况
	> jstat ...


安装tomcat：
1.命令行下载
	> wget http://mirrors.shu.edu.cn/apache/tomcat/tomcat-8/v8.0.52/bin/apache-tomcat-8.0.52.tar.gz
2.解压tomcat
	> tar -zxvf apache-tomcat-8.0.52.tar.gz
3.移动tomcat
	> sudo mv apache-tomcat-8.0.52/ /usr/local/apache-tomcat-8.0.52
4.启动&关闭tomcat
	> cd apache-tomcat-8.0.52/bin
	> ./startup.sh 	#启动
	> ./shutdown.sh #关闭
5.查看tomcat进程是否启动
	> ps aux | grep tomcat
	> ps -ef |grep tomcat #查看tomcat进程
		-Dcatalina.base=/opt/jira7.3.4/atlassian-jira-software-7.3.4-standalone //对应启动目录
	> ps -ef | grep 8080 #查看端口
6.查看tomcat启动日志
	> cd tomcat/logs/
	> tail -f xx.out --查看xx.out文件
	> tail -1000f catalina.out --查看最近1000行日志

redis集群：
	wget -P /redis http://download.redis.io/releases/redis-4.0.1.tar.gz
	mkdir -p /redis_cluster/6001 /redis_cluster/6002 /redis_cluster/6003 //创建三个文件夹


查看Linux版本: > cat /etc/centos-release
查看CPU个数：
	查看逻辑cpu个数： cat /pro/cpuinfo | grep "processor" | wc -l
	查看物理cpu个数： cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l
	查看每个物理cpu的核数： cat /proc/cpuinfo | grep "cpu cores"
	若所有物理cpu的cores个数加起来小于逻辑cpu个数，则该cpu使用了超线程技术。
	查看每个物理cpu中逻辑cpu的个数：cat /proc/cpuinfo | grep "siblings"
查看内存使用情况：> free -m
	Mem：内存的使用情况总览表
	total：机器总物理内存，单位为M
	used：用掉的内存
	free：空闲的内存






