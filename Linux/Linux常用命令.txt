
Linux相关工具：
	SecureCRT
	Xshell
	WinSCP


windows10下安装VMware虚拟机并搭建CentOS系统环境：
	https://www.cnblogs.com/xingxia/p/vmware_windows.html
使用VMware在本地搭建多个CentOS虚拟机：
	https://blog.csdn.net/yangshangwei/article/details/82766404

CentOS7安装：
	开放20和22端口：
		Xshell通过sll连接，端口是20或22。CentOS7没有开放任何端口，所以不能在window上访问，也不能通过xshell连接。
		CentOS7放弃了iptables防火墙而启用firewall防火墙。
		firewall-cmd –zone=public –add-port=20/tcp –permanent #开放20端口
		firewall-cmd –zone=public –add-port=22/tcp –permanent #开放22端口
	防火墙端口：
		1、查看所有已开放的端口
			sudo firewall-cmd --zone=public --list-ports
		2、添加（--permanent永久生效，没有此参数重启后失效）
			sudo firewall-cmd --zone=public --add-port=8080/tcp --permanent
		3、重新载入(更新防火墙规则)
			sudo firewall-cmd --reload
	查看防火墙开放的端口：
		> more /etc/sysconfig/iptables
	查看端口是否被占用
		> netstat -anp | grep 端口号
		> netstat -nultp (此处不用加端口号)
		--说明：
		listen表示已被占用，最后一行显示被服务xx占用
		查看具体端口时候，必须要看到tcp，端口号，LISTEN那一行，才表示端口被占用

	> yum install vim  	#安装vim编辑器
	> yum install wget 	#安装wget下载
	> cd /usr/local/src	#切换到下载文件目录

	添加用户:
		> useradd -d /usr/testUser -m testUser 	--添加用户testUser，产生一个主目录/usr/testUser
		> useradd testUser	--添加用户
		> passwd testUser		--修改密码
		> su testUser 		--切换用户
	用户组：
		> groupadd testGroup	--添加组

	CentOS用户无法开启系统权限：
		问题描述：XXX is not in the sudoers file. This incident will be reported
		详细：https://blog.csdn.net/jeremyjone/article/details/81355568
		步骤：
			1、切换为root用户：$ su
			2、添加文件的写权限：$ chmod u+w /etc/sudoers
			3、编辑sudoers文件：$ vim /etc/sudoers 
			#找到“root ALL=(ALL)	ALL”这一行，在下一行添加“test ALL=(ALL) ALL”内容

vim编辑文件：
	vim fileName #进入vi命令
	:set nu #显示所有行号
	i 	#进入编辑模式
	esc	#退出编辑模式
	:q 	#不保存退出vim
	:q!	#强制不保存退出vim
	:wq	#保存退出vim


查看Linux版本: > cat /etc/centos-release
查看CPU个数：
	查看逻辑cpu个数： cat /pro/cpuinfo | grep "processor" | wc -l
	查看物理cpu个数： cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l
	查看每个物理cpu的核数： cat /proc/cpuinfo | grep "cpu cores"
	若所有物理cpu的cores个数加起来小于逻辑cpu个数，则该cpu使用了超线程技术。
	查看每个物理cpu中逻辑cpu的个数：cat /proc/cpuinfo | grep "siblings"
查看内存使用情况：> free -m
	Mem：内存的使用情况总览表
	total：机器总物理内存，单位为M
	used：用掉的内存
	free：空闲的内存


*************************************************
安装JDK：
1.卸载Linux自带的JDK：
	> java -version	//查看系统现有的jdk
	> rpm -qa|grep java //查看jdk的信息
	> yum remove *openjdk* //卸载jdk
2.从网上下载jdk
	wget https://download.oracle.com/otn-pub/java/jdk/8u201-b09-demos/42970487e3af4f5aa5bca3f542482c60/jdk-8u201-linux-x64-demos.tar.gz
3.解压
	tar -zxvf jdk-8u171-linux-x64.tar.gz
4.设置环境变量
	> vim /etc/profile
	在文件末尾追加：
	JAVA_HOME=/opt/java/jdk1.8.0_171
	JRE_HOME=$JAVA_HOME/jre
	PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin
	CLASSPATH=:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib/dt.jar
	export JAVA_HOME JRE_HOME PATH CLASSPATH
5.最后启用新的配置
	source /etc/profile
6.检查新安装的jdk
	java -version
7.jdk自带命令查看GC情况
	> jstat ...


安装tomcat：
1.命令行下载
	> wget http://mirrors.shu.edu.cn/apache/tomcat/tomcat-8/v8.0.52/bin/apache-tomcat-8.0.52.tar.gz
2.解压tomcat
	> tar -zxvf apache-tomcat-8.0.52.tar.gz
3.移动tomcat
	> sudo mv apache-tomcat-8.0.52/ /usr/local/apache-tomcat-8.0.52
4.启动&关闭tomcat
	> cd apache-tomcat-8.0.52/bin
	> ./startup.sh 	#启动
	> ./shutdown.sh #关闭
5.查看tomcat进程是否启动
	> ps aux | grep tomcat
	> ps -ef |grep tomcat #查看tomcat进程
		-Dcatalina.base=/opt/jira7.3.4/atlassian-jira-software-7.3.4-standalone //对应启动目录
	> ps -ef | grep 8080 #查看端口
6.查看tomcat启动日志
	> cd tomcat/logs/
	> tail -f xx.out --查看xx.out文件
	> tail -1000f catalina.out --查看最近1000行日志




显示一个文件的第2000-5000行：
	> cat file | head -n 5000 | tail -n +2000 #显示20000行到5000行
	说明：
		tail -n +2000 表示从2000行开始显示
		tail -n 2000 表示显示文件最后2000行，差别很大
	> cat file | tail -n +2000 | head -n 5000 #从第2000行开始，共显示5000行，也就是2000~6999行！

将当前目录下以“.log”结尾且修改时间大于90天的5G以上的大文件删除：
	find ./ -name "*.log" -type f -mtime +90 -size +10G -maxdepth 1 -print -exec rm {} \;
	说明：
		-name "*.log":按名称查找如果忽略大小写则用-iname，注意引号别丢
		-type f:文件类型限定为文件，目录是d
		-mtime +90:修改时间大于90天。-n指n天以内
		-size +10G:文件大小过滤
		-maxdepth 1:限制查找最大深度，当前目录是1
		-print:将找到的文件以相对路径的形式打印
		-exec rm {}; 找到的文件将执行删除命令，最后是"空格"+{}+"分号;"都不能省。
		补充：
			若是删除文件用rm -rf
			若想要删除前确认，将“-exec rm {} ;”替换成“-ok rm {} ;”

发现磁盘空间不够，如何快速找出占用空间最大的文件？
	> find / -type f -size +10G #找出大于10G的文件

如何在log文件中搜索找出error的日志？
	描述：more、tail、vi 但是由于日志太大了，而我只需要记录ERROR信息就可以了，有什么办法或命令能够从后向前查看日志中最后记录的一个ERROR信息的办法呢？
	> tail -100 |grep error #查看最后100条日志中并过滤出包含error内容的

线上发送频繁full gc如何处理? CPU 使用率过高怎么办?

Thread dump文件如何分析？
	dump文件用途、生成、分析



********************
top命令：
第一行：基本信息
	系统时间：“19:26:23 up”
	系统运行时间：“2 days, 14:46”，这里表示已经运行了2天14小时46分钟
		
	当前登录用户数：“1 user”
	负载均衡(load average):0.04 0.04 0.01
		average后面三个数分别是1分钟、5分钟、15分钟的负载情况
		load average数据是每隔5秒钟检查一次活跃的进程数，然后按特定算法计算出的数值。如果这个数除以逻辑CPU的数量，结果高于5的时候就表明系统在超负荷运转了
第二行：任务信息
	总进程:159 total, 运行:1 running, 休眠:157 sleeping, 停止: 1 stopped, 僵尸进程: 0 zombie
第三行：CPU使用情况
	0.0%us【user space】— 用户空间占用CPU的百分比。
	0.1%sy【sysctl】— 内核空间占用CPU的百分比。
	0.0%ni【】— 改变过优先级的进程占用CPU的百分比
	99.9%id【idolt】— 空闲CPU百分比
	0.0%wa【wait】— IO等待占用CPU的百分比
	0.0%hi【Hardware IRQ】— 硬中断占用CPU的百分比
	0.0%si【Software Interrupts】— 软中断占用CPU的百分比
第四行：物理内存使用情况
	1012288k total,   234464k used,   777824k free,    24084k buffers【缓存的内存量】
第五行：swap交换分区信息
	614396k total,        0k used,   614396k free,    72356k cached【缓冲的交换区总量】
	说明：
		可用内存=free+buffer+cached
		对于内存监控，在top里我们要时刻监控第五行swap交换分区的used，如果这个数值在不断的变化，说明内核在不断进行内存和swap的数据交换，这是真正的内存不够用了。
		第四行中使用中的内存总量（used）指的是现在系统内核控制的内存数，
		第四行中空闲内存总量（free）是内核还未纳入其管控范围的数量。
		纳入内核管理的内存不见得都在使用中，还包括过去使用过的现在可以被重复利用的内存，内核并不把这些可被重新使用的内存交还到free中去，因此在linux上free内存会越来越少，但不用为此担心。
第六行：空行
第七行以下：各进程（任务）的状态监控
	pid -进程id
	user -进程所有者
	pr -进程优先级
	ni -nice值。负值表示高优先级，正值表示低优先级
	virt -进程使用的虚拟内存总量，单位kb。virt=swap+res
	res -进程使用的、未被换出的物理内存大小，单位kb。res=code+data
	shr -共享内存大小，单位kb
	s -进程状态。d=不可中断的睡眠状态 r=运行 s=睡眠 t=跟踪/停止 z=僵尸进程
	%cpu -上次更新到现在的cpu时间占用百分比
	%mem -进程使用的物理内存百分比
	time+ -进程使用的cpu时间总计，单位1/100秒
	command -进程名称（命令名/命令行）

********************
grep命令
	--用于查找文件里付符合条件的字符串
	grep [-cinvABC] 'word' filename
	-c:打印符合要求的行数
	-n:在输出符合要求的行同时连同行号一起输出
	-v:打印不符合要求的行
	-A:后跟一个数字(有无空格都可以)，例如-A2则表示打印符合要求的行以及下面两行
	-B:后跟一个数字，例如-B2打印符合要求的行以及上面两行
	-C:后跟一个数字，例如-C2打印符合要求的行以及上下各两行
	-r:会把目录下面所有的文件全部遍历
实例：
	> grep -n 'root' 1.txt		#打印包含root的行，并输出行号
	> grep -n -v 'root' 1.txt 	#打印不包含root的行，并输出行号
	> grep '[0-9]' 1.txt	#打印包含数字的行
	> grep '^[a-zA-Z]' 1.txt	#打印以英文字母开头的行
	> grep test *.log 	#查找包含test字符串的所有日志文件
	> grep 'testAA' ./*	#查看当前目录下所有文件是否存在“testAA”内容

实例1-Linux根据关键字查询日志：
	1.单文件：vi或vim编辑器打开文件。在查看模式下，“/关键字”向下查找，“?关键字”向上查找
	2.多文件：grep ERROR /var/log/messages* #匹配到ERROR这个关键字的行和所在的日志文件直接输出到屏幕
	3.cat命令查看。如cat xx.log | grep key 等价于 grep key xx.log

问：如何在log文件中搜索找出error的日志？
	grep -n 'error' *.log


********************
tail查询日志
	tail -1000f xx.log	#实时刷新最新的1000行日志
	tail -1000f xx.log | grep [关键字] #查找最新1000行中与关键字匹配的行
	tail -100f xxx.log | grep '2019-10-29 16:4[0-9]' #查找最新的100行中时间范围在2019-10-29 16:40-2019-10-29 16:49范围中的行
	tail -1000f xxx.log | grep -A 5 [关键字] #查看最新的1000行中与关键字匹配的行加上匹配行后的5行


********************
find查找文件
	> find . -type f -size +100M 	--查找大小超过5M的文件
	> find /etc -name tnsnames.ora		--查找etc目录的tnsnames.ora文件
	> find / | grep nginx.conf #查找根目录/及其子目录下名为nginx.conf的文件


********************
其它命令：
	> top 	--查看资源占用率
	> free 	--查看总内存、使用、空闲情况
	> pwd	--查看当前目录
	> tar -zxvf nginx.tar.gz	--解压包

问：怎么查看进程和杀死进程？
	> ps -ef | grep java --查看Java进程
	> kill -9 [pid] #进程号 --杀死进程，“-9”强迫进程立即停止

问：打印一个文件夹的所有文件？
	ll ls


************
sed命令
	--利用脚本处理文本文件
实例：
	#将redis.conf的7000替换为7001，并以新文件保存
	sed 's/7000/7001/g' redis.conf > /myredis/redis7001/redis.conf 
