标题：删除已排序数组中的重复项
描述：给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。
例如：
	数组nums = [1,1,2]，函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。
	给定 nums = [0,0,1,1,1,2,2,3,3,4],返回长度2，并且被修改为0, 1, 2, 3, 4。

思路：两个指针i和j。j>i。若nums[i] == num[j]则j++，否则将nums[j]替换nums[i+1];且i++;
源代码：
public class Main {
	public static void main(String[] args) {
		int[] nums = {1, 1, 2};
		int removeDuplicates = removeDuplicates(nums);
		for(int i = 0; i < removeDuplicates; i++) {
			System.out.print(nums[i] + " ");
		}
	}
	
	public static int removeDuplicates(int[] nums) {
		int len = nums.length;
		if (len < 2) return len;
		
		int i = 0, j = 0;
		while (++j < len) {
			if (nums[i] != nums[j]) {
				i++;
				if (i != j) {
					nums[i] = nums[j];
				}
			}
		}
		return i + 1;
	}

	// 别人的算法！！！
	public static int removeDuplicates(int[] nums) {
		int count = 0, len = nums.length;
		for (int i = 1; i < len; i++) {
			if (nums[i-1] == nums[i]) {
				count++;
			} else {
				nums[i - count] = nums[i];
			}
		}
		
		return len - count;
	}
}
